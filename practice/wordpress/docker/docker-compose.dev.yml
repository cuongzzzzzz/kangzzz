version: '3.8'

# Development WordPress Docker Compose Configuration
# This configuration is optimized for development and testing

services:
  wordpress:
    image: wordpress:latest
    container_name: wordpress_dev
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress_password
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DEBUG: 1
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_DEBUG', true);
        define('WP_DEBUG_LOG', true);
        define('WP_DEBUG_DISPLAY', true);
        define('SCRIPT_DEBUG', true);
        define('WP_REDIS_HOST', 'redis');
        define('WP_REDIS_PORT', 6379);
        define('WP_REDIS_DATABASE', 0);
    volumes:
      - wordpress_data:/var/www/html
      - ./config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      - ./config/php-dev.ini:/usr/local/etc/php/conf.d/wordpress.ini
      - ./themes:/var/www/html/wp-content/themes/custom
      - ./plugins:/var/www/html/wp-content/plugins/custom
      - ./uploads:/var/www/html/wp-content/uploads
    depends_on:
      - db
      - redis
    networks:
      - wordpress_network

  db:
    image: mysql:8.0
    container_name: wordpress_db_dev
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wordpress_network
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"

  redis:
    image: redis:7-alpine
    container_name: wordpress_redis_dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - wordpress_network
    ports:
      - "6379:6379"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: wordpress_phpmyadmin_dev
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_USER: wordpress
      PMA_PASSWORD: wordpress_password
      MYSQL_ROOT_PASSWORD: root_password
    depends_on:
      - db
    networks:
      - wordpress_network

  mailhog:
    image: mailhog/mailhog
    container_name: wordpress_mailhog_dev
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - wordpress_network

  wp-cli:
    image: wordpress:cli
    container_name: wordpress_cli_dev
    restart: "no"
    volumes:
      - wordpress_data:/var/www/html
      - ./scripts:/scripts
    depends_on:
      - wordpress
    networks:
      - wordpress_network
    command: tail -f /dev/null

  xdebug:
    image: wordpress:latest
    container_name: wordpress_xdebug_dev
    restart: unless-stopped
    ports:
      - "9003:9003"
    environment:
      XDEBUG_CONFIG: "client_host=host.docker.internal client_port=9003"
      XDEBUG_MODE: "debug"
    volumes:
      - wordpress_data:/var/www/html
    depends_on:
      - wordpress
    networks:
      - wordpress_network
    command: php-fpm -d xdebug.mode=debug -d xdebug.client_host=host.docker.internal -d xdebug.client_port=9003

volumes:
  wordpress_data:
    driver: local
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  wordpress_network:
    driver: bridge
